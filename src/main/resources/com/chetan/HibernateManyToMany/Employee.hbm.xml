<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
   <class name="com.chetan.HibernateManyToMany.Employee" table="EMPLOYEE">
      <meta attribute="class-description">
         This class contains the employee detail.
      </meta>
      <id name="id" type="int" column="id">
         <generator class="native"/>
      </id>
      <!--The <key> element is the column in the EMP_CERT table that holds the foreign key to the-->
      <!--parent object ie. table EMPLOYEE and links to the certification_id in the CERTIFICATE table.-->
      <set name="certificates" cascade="save-update" table="EMP_CERT">
         <!--The name attribute is set to the defined Set variable in the parent class,
          in our case it is certificates
          Here we used name attribute to set the intermediate table name to EMP_CERT.
          .-->
         <key column="employee_id"/>
         <!--The <many-to-many> element indicates that one Employee object relates to many Certificate-->
         <!--objects and column attributes are used to link intermediate EMP_CERT.-->
         <many-to-many column="certificate_id" class="com.chetan.HibernateManyToMany.Certificate"/>
      </set>
      <property name="firstName" column="first_name" type="string"/>
      <property name="lastName" column="last_name" type="string"/>
      <property name="salary" column="salary" type="int"/>
   </class>

   <class name="com.chetan.HibernateManyToMany.Certificate" table="CERTIFICATE">
      <meta attribute="class-description">
         This class contains the certificate records.
      </meta>
      <id name="id" type="int" column="id">
         <generator class="native"/>
      </id>
      <property name="name" column="certificate_name" type="string"/>
   </class>

</hibernate-mapping>